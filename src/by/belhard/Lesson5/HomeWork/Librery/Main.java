package by.belhard.Lesson5.HomeWork.Librery;

/*
Библиотека
1.	Определить класс Book,
в котором будут поля для названия книги (name), имени автора (authorName) и содержания (text).
 Содержание, для удобства, можно оставлять пустым
Определить класс Reader, хранящий такую информацию о пользователе библиотеки:
- ФИО (можно одно поле, можно три)
- номер читательского билета
- факультет
- дата рождения
- телефон
- список взятых книг (массив из Book на 10 элементов)
- Методы takeBook, returnBook, printStatus.
Перегрузить методы:
- printStatus, который будит выводить информацию о читателе в формате
 «Петров В. В. взял 3 книги: Мастер и Маргарита, Война и Мир, Люпен»,
 т.е. сперва имя фамилию, потом инициалы имени и отчества,
 после чего двоеточие и перечисление через запятую названий книг, которые сейчас находятся у читателя
- takeBook, который будет принимать объект Book,
 добавлять его в массив взятых книг и выводить на экран сообщение формата «Петров В.В. взял книгу Игра Эндера»
- returnBook, который будет принимать название книги.
Если такая книга хранится у читателя, убрать её из массива и вывести сообщение формата
«Петров В.В. вернул книгу Игра Эндера».
Если же такой книги в читателя нет, вывести сообщение формата
«Петров В.В. не хранит книгу Игра Эндера»

 */
public class Main {
    public static void main(String[] args) {

        Book book1 = new Book();
        book1.name = "Мастер и Маргарита";
        book1.authorName = "Булгаков";

        Book book2 = new Book();
        book2.name = "Азазель";
        book2.authorName = "Фандорин";

        Reader reader1 = new Reader();
        reader1.book[0] = book1;
        reader1.surName = "Воронцов";
        reader1.name = "Андрей";
        reader1.patronymic = "Сергеевич";
        reader1.printStatus();
        reader1.takeBook(book2);
        reader1.printStatus();
        reader1.returnBook("Мастер и Маргарита");
        reader1.returnBook("Люпен");
        reader1.printStatus();
    }
}
